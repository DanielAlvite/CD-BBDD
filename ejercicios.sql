
--1.Devuelve todas las películas
RESULTADO

SELECT * FROM MOVIES

--2. Devuelve todos los géneros existentes
RESULTADO

SELECT * FROM GENRES


--3. Devuelve la lista de todos los estudios de grabación que estén activos
RESULTADO

SELECT * FROM STUDIOS WHERE STUDIO_ACTIVE IS TRUE


--4. Devuelve una lista de los 20 últimos miembros en anotarse al videoclub
RESULTADO

SELECT * FROM MEMBERS ORDER BY MEMBER_DISCHARGE_DATE DESC LIMIT 20

--5. Devuelve las 20 duraciones de películas más frecuentes, ordenados de mayor a menor.
RESULTADO

SELECT MOVIE_DURATION, COUNT(*) AS FREQUENCY FROM MOVIES GROUP BY MOVIE_DURATION ORDER BY FREQUENCY DESC LIMIT 20

--6. Devuelve las películas del año 2000 en adelante que empiecen por la letra A.
RESULTADO

SELECT * FROM MOVIES WHERE MOVIE_NAME LIKE 'A%' AND MOVIE_LAUNCH_DATE >= '2000-01-01'

--7. Devuelve los actores nacidos un mes de Junio
RESULTADO

SELECT * FROM ACTORS WHERE MONTH(ACTOR_BIRTH_DATE) = 6 ORDER BY DAY (ACTOR_BIRTH_DATE)

--8. Devuelve los actores nacidos cualquier mes que no sea Junio y que sigan vivos.
RESULTADO

SELECT * FROM ACTORS WHERE MONTH(ACTOR_BIRTH_DATE) <> 6 AND ACTOR_DEAD_DATE IS NULL 

--9. Devuelve el nombre y la edad de todos los directores menores o iguales de 50 años que estén vivos
RESULTADO

SELECT  DIRECTOR_NAME, YEAR(NOW()) - YEAR (DIRECTOR_BIRTH_DATE) AS "AGE" FROM DIRECTORS WHERE YEAR (NON()) - YEAR (DIRECTOR_BIRTH_DATE) < 50 

AND DIRECTOR_DEAD_DATE IS NULL

--10. Devuelve el nombre y la edad de todos los actores menores de 50 años que hayan fallecido
RESULTADO

SELECT ACTOR NAME, YEAR(NOW()) - YEAR (ACTOR BIRTH DATE) AS "AGE" FROM ACTORS WHERE YEAR (NON()) - YEAR (ACTOR BIRTH DATE) < 50 

AND ACTOR_DEAD_DATE IS NOT NULL

--11. Devuelve el nombre de todos los directores menores o iguales de 40 años que estén vivos
RESULTADO

SELECT  DIRECTOR_NAME, YEAR(NOW()) - YEAR (DIRECTOR_BIRTH_DATE) AS "AGE" FROM DIRECTORS WHERE YEAR (NON()) - YEAR (DIRECTOR_BIRTH_DATE) <=40

AND DIRECTOR_DEAD_DATE IS NULL

--12. Indica la edad media de los directores vivos
RESULTADO

SELECT AVG (YEAR(NON()) - YEAR (DIRECTOR_BIRTH_DATE))FROM DIRECTORS WHERE DIRECTORS_DEAD_DATE IS NULL

--13. Indica la edad media de los actores que han fallecido
RESULTADO

SELECT AVG(DATEIFF(YEAR, ACTOR_BIRTH_DATE , ACTOR_DEAD_DATE )) AS "AVERAGE AGE"  FROM ACTORS WHERE  ACTORS_DEAD_DATE IS NOT NULL

--14. Devuelve el nombre de todas las películas y el nombre del estudio que las ha realizado
RESULTADO

SELECT MOVIES.MOVIE_NAME AS NOMBRE_PELICULA, STUDIOS.STUDIO_NAME AS NOMBRE_ESTUDIO 

FROM MOVIES JOIN STUDIOS ON MOVIES.STUDIO_ID = STUDIOS.STUDIO_ID;


--15. Devuelve los miembros que alquilaron al menos una película entre el año 2010 y el 2015
RESULTADO

SELECT DISTINCT MEMBERS.MEMBER_NAME FROM MEMBERS

JOIN MEMBERS_MOVIE_RENTAL  ON MEMBERS.MEMBER_ID = MEMBERS_MOVIE_RENTAL.MEMBER_ID

WHERE YEAR(MEMBERS_MOVIE_RENTAL.MEMBER_RENTAL_DATE) BETWEEN 2010 AND 2015

--16. Devuelve cuantas películas hay de cada país
RESULTADO

SELECT NATIONALITIES.NATIONALITY_NAME ,COUNT(*)  FROM NATIONALITIES 

JOIN MOVIES ON NATIONALITIES.NATIONALITY_ID = MOVIES.NATIONALITY_ID  

GROUP BY NATIONALITIES.NATIONALITY_NAME


--17. Devuelve todas las películas que hay de género documental
RESULTADO

SELECT MOVIES.MOVIE_NAME  FROM MOVIES

JOIN GENRES ON MOVIES.GENRE_ID = GENRES.GENRE_ID

WHERE GENRES.GENRE_NAME = 'Documentary'


--18. Devuelve todas las películas creadas por directores nacidos a partir de 1980 y que todavía están vivos
RESULTADO

SELECT MOVIES.MOVIE_NAME , DIRECTORS.DIRECTOR_NAME FROM MOVIES

JOIN DIRECTORS  ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID

WHERE YEAR(DIRECTORS.DIRECTOR_BIRTH_DATE) >= 1980 AND DIRECTOR_DEAD_DATE IS NULL;



--19. Indica si hay alguna coincidencia de nacimiento de ciudad (y si las hay, indicarlas) entre los miembros del videoclub y los directores.
RESULTADO

SELECT MEMBERS.MEMBER_NAME, DIRECTORS.DIRECTOR_NAME, DIRECTORS.DIRECTOR_BIRTH_PLACE
FROM MEMBERS
INNER JOIN DIRECTORS ON MEMBERS.MEMBER_TOWN = DIRECTORS.DIRECTOR_BIRTH_PLACE;


--20. Devuelve el nombre y el año de todas las películas que han sido producidas por un estudio que actualmente no esté activo
RESULTADO

SELECT MOVIES.MOVIE_NAME , MOVIES.MOVIE_LAUNCH_DATE

FROM MOVIES JOIN STUDIOS ON MOVIES.STUDIO_ID = STUDIOS.STUDIO_ID

WHERE STUDIOS.STUDIO_ACTIVE IS FALSE;


--21. Devuelve una lista de las últimas 10 películas que se han alquilado
RESULTADO

SELECT MOVIES.MOVIE_NAME , MEMBERS_MOVIE_RENTAL.MEMBER_RENTAL_DATE

FROM MEMBERS_MOVIE_RENTAL JOIN MOVIES ON MEMBERS_MOVIE_RENTAL.MOVIE_ID = MOVIES.MOVIE_ID

ORDER BY MEMBERS_MOVIE_RENTAL.MEMBER_RENTAL_DATE DESC LIMIT 10;



--22. Indica cuántas películas ha realizado cada director antes de cumplir 41 años 
RESULTADO

SELECT COUNT(*) , DIRECTORS.DIRECTOR_NAME

FROM MOVIES

JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID

WHERE YEAR(MOVIES.MOVIE_LAUNCH_DATE) -YEAR(DIRECTORS.DIRECTOR_BIRTH_DATE)  < 41

GROUP BY DIRECTORS.DIRECTOR_NAME;


--23. Indica cuál es la media de duración de las películas de cada director
RESULTADO

SELECT DIRECTORS.DIRECTOR_NAME, AVG(MOVIES.MOVIE_DURATION)

FROM DIRECTORS

JOIN MOVIES ON DIRECTORS.DIRECTOR_ID = MOVIES.DIRECTOR_ID

GROUP BY DIRECTORS.DIRECTOR_NAME;

--24. Indica cuál es el nombre y la duración mínima de las películas que han sido alquiladas en los últimos 2 años por los miembros del videoclub (La "fecha de ejecución" en este script es el 25-01-2019)
RESULTADO

SELECT MOVIES.MOVIE_NAME , MOVIES.MOVIE_DURATION

FROM MOVIES

JOIN MEMBERS_MOVIE_RENTAL  ON MOVIES.MOVIE_ID = MEMBERS_MOVIE_RENTAL.MOVIE_ID

JOIN MEMBERS ON MEMBERS_MOVIE_RENTAL.MEMBER_ID = MEMBERS.MEMBER_ID

WHERE DATEADD('YEAR',-2 , DATE '2019-01-25') <  MEMBERS_MOVIE_RENTAL.MEMBER_RENTAL_DATE

ORDER BY MOVIES.MOVIE_DURATION LIMIT 1;

--25. Indica el número de películas que hayan hecho los directores durante las décadas de los 60, 70 y 80 que contengan la palabra "The" en cualquier parte del título
RESULTADO

SELECT DIRECTORS.DIRECTOR_NAME, COUNT(*)

FROM DIRECTORS

JOIN MOVIES ON DIRECTORS.DIRECTOR_ID = MOVIES.DIRECTOR_ID

WHERE (YEAR(MOVIES.MOVIE_LAUNCH_DATE) BETWEEN 1960 AND 1989) AND (UPPER(MOVIES.MOVIE_NAME) LIKE '%THE%')

GROUP BY DIRECTORS.DIRECTOR_NAME;

--26. Lista nombre, nacionalidad y director de todas las películas
RESULTADO

SELECT MOVIES.MOVIE_NAME, DIRECTORS.DIRECTOR_BIRTH_PLACE ,DIRECTORS.DIRECTOR_NAME

FROM MOVIES

JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID;


--27. Muestra las películas con los actores que han participado en cada una de ellas
RESULTADO

SELECT MOVIES.MOVIE_NAME , GROUP_CONCAT(ACTORS.ACTOR_NAME)

FROM MOVIES

JOIN MOVIES_ACTORS ON MOVIES.MOVIE_ID = MOVIES_ACTORS.MOVIE_ID

JOIN ACTORS ON MOVIES_ACTORS.ACTOR_ID = ACTORS.ACTOR_ID

GROUP BY MOVIES.MOVIE_NAME;


--28. Indica cual es el nombre del director del que más películas se han alquilado
RESULTADO

SELECT DIRECTORS.DIRECTOR_NAME ,COUNT(*)

FROM DIRECTORS

JOIN MOVIES ON DIRECTORS.DIRECTOR_ID = MOVIES.DIRECTOR_ID

JOIN MEMBERS_MOVIE_RENTAL ON MOVIES.MOVIE_ID = MEMBERS_MOVIE_RENTAL.MOVIE_ID

GROUP BY DIRECTORS.DIRECTOR_NAME LIMIT 1;



--29. Indica cuantos premios han ganado cada uno de los estudios con las películas que han creado
RESULTADO

SELECT STUDIOS.STUDIO_NAME, COUNT(*)

FROM STUDIOS

LEFT JOIN MOVIES ON STUDIOS.STUDIO_ID = MOVIES.STUDIO_ID

LEFT JOIN AWARDS ON MOVIES.MOVIE_ID = AWARDS.MOVIE_ID

GROUP BY STUDIOS.STUDIO_NAME;

--30. Indica el número de premios a los que estuvo nominado un actor, pero que no ha conseguido (Si una película está nominada a un premio, su actor también lo está)
RESULTADO

SELECT ACTORS.ACTOR_NAME AS ACTOR_NAME,COUNT(*)

FROM ACTORS

JOIN MOVIES_ACTORS ON ACTORS.ACTOR_ID = MOVIES_ACTORS.ACTOR_ID

JOIN MOVIES ON MOVIES_ACTORS.MOVIE_ID = MOVIES.MOVIE_ID

JOIN AWARDS ON MOVIES.MOVIE_ID = AWARDS.MOVIE_ID

WHERE AWARDS.AWARD_ALMOST_WIN = TRUE

GROUP BY ACTORS.ACTOR_NAME;

--31. Indica cuantos actores y directores hicieron películas para los estudios no activos
RESULTADO

SELECT COUNT(DISTINCT ACTORS.ACTOR_ID) AS ACTORS,COUNT(DISTINCT DIRECTORS.DIRECTOR_ID) AS DIRECTORS

FROM ACTORS

JOIN MOVIES_ACTORS ON ACTORS.ACTOR_ID = MOVIES_ACTORS.ACTOR_ID

JOIN MOVIES ON MOVIES_ACTORS.MOVIE_ID = MOVIES.MOVIE_ID

JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID

JOIN STUDIOS ON MOVIES.STUDIO_ID = STUDIOS.STUDIO_ID

WHERE STUDIOS.STUDIO_ACTIVE = FALSE;


--32. Indica el nombre, ciudad, y teléfono de todos los miembros del videoclub que hayan alquilado películas que hayan sido nominadas a más de 150 premios y ganaran menos de 50
RESULTADO

SELECT DISTINCT MEMBERS.MEMBER_NAME,MEMBERS.MEMBER_TOWN,MEMBERS.MEMBER_PHONE

FROM MEMBERS

JOIN MEMBERS_MOVIE_RENTAL ON MEMBERS.MEMBER_ID = MEMBERS_MOVIE_RENTAL.MEMBER_ID

JOIN MOVIES ON MEMBERS_MOVIE_RENTAL.MOVIE_ID = MOVIES.MOVIE_ID

JOIN AWARDS ON MOVIES.MOVIE_ID = AWARDS.MOVIE_ID

WHERE AWARDS.AWARD_NOMINATION > 150 AND AWARDS.AWARD_WIN < 50;


--33. Comprueba si hay errores en la BD entre las películas y directores (un director fallecido en el 76 no puede dirigir una película en el 88)
RESULTADO

 SELECT D.DIRECTOR_NAME,D.DIRECTOR_DEAD_DATE, MAX(MOV.MOVIE_LAUNCH_DATE) AS LAST_MOVIE 
 FROM DIRECTORS D JOIN MOVIES MOV ON MOV.DIRECTOR_ID = D.DIRECTOR_ID 
 WHERE D.DIRECTOR_DEAD_DATE <= MOV.MOVIE_LAUNCH_DATE 
 GROUP BY D.DIRECTOR_NAME, D.DIRECTOR_DEAD_DATE;



--34. Utilizando la información de la sentencia anterior, modifica la fecha de defunción a un año más tarde del estreno de la película (mediante sentencia SQL)
RESULTADO

UPDATE DIRECTORS SET DIRECTOR_DEAD_DATE =(

SELECT MAX(DATEADD(YEAR, 1, M.MOVIE_LAUNCH_DATE)) AS POST_MOVIE_LAUNCH_DATE

FROM MOVIES M

INNER JOIN DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID WHERE D.DIRECTOR_DEAD_DATE IS NOT NULL

AND D.DIRECTOR_DEAD_DATE < M.MOVIE_LAUNCH_DATE AND D.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID

GROUP BY DIRECTOR_NAME, DIRECTOR_DEAD_DATE) WHERE DIRECTOR_ID IN (

SELECT DISTINCT D.DIRECTOR_ID

FROM MOVIES M

INNER JOIN DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID

WHERE D.DIRECTOR_DEAD_DATE IS NOT NULL AND D.DIRECTOR_DEAD_DATE < M.MOVIE_LAUNCH_DATE )


-- 35. Indica cuál es el género favorito de cada uno de los directores cuando dirigen una película

SELECT GROUPID.DIRECTOR_NAME,GROUP_CONCAT(GROUPID.GENRE_NAME) AS GENRE_NAME

FROM
    (
    SELECT COUNT(G.GENRE_NAME) AS NUM_MOVIES, D.DIRECTOR_ID,D.DIRECTOR_NAME,G.GENRE_ID,G.GENRE_NAME

    FROM MOVIES M

    INNER JOIN GENRES AS G ON M.GENRE_ID = G.GENRE_ID

    INNER JOIN DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID

    GROUP BY G.GENRE_ID,D.DIRECTOR_ID

    ORDER BY D.DIRECTOR_ID) GROUPID

INNER JOIN (

    SELECT DIRECTOR_ID, MAX(NUM_MOVIES) NUM_MOVIES FROM (

    SELECT

    COUNT(G.GENRE_NAME) AS NUM_MOVIES, D.DIRECTOR_ID,D.DIRECTOR_NAME,G.GENRE_ID,G.GENRE_NAME

        FROM MOVIES M INNER JOIN GENRES AS G ON M.GENRE_ID = G.GENRE_ID

        INNER JOIN DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID

        GROUP BY G.GENRE_ID, D.DIRECTOR_ID

        ORDER BY D.DIRECTOR_ID)

        GROUP BY DIRECTOR_ID) MAXVAL ON GROUPID.DIRECTOR_ID = MAXVAL.DIRECTOR_ID AND GROUPID.NUM_MOVIES = MAXVAL.NUM_MOVIES

        GROUP BY GROUPID.DIRECTOR_NAME

--36. Indica cuál es la nacionalidad favorita de cada uno de los estudios en la producción de las películas
RESULTADO

SELECT S.STUDIO_NAME AS Studio, GROUP_CONCAT(Subquery.DIRECTOR_BIRTH_PLACE) AS Most_Used_Nationalities

FROM STUDIOS S

LEFT JOIN (
    
    SELECT M.STUDIO_ID, D.DIRECTOR_BIRTH_PLACE, COUNT(*) AS nationality_count
    
    FROM MOVIES M
    
    JOIN DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID
    
    GROUP BY M.STUDIO_ID, D.DIRECTOR_BIRTH_PLACE

) AS Subquery ON S.STUDIO_ID = Subquery.STUDIO_ID

WHERE Subquery.nationality_count = (
    
    SELECT MAX(nationality_count)
    
    FROM (
      
        SELECT DISTINCT M.STUDIO_ID, D.DIRECTOR_BIRTH_PLACE, COUNT(*) AS nationality_count
     
        FROM MOVIES M
     
        JOIN DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID
     
        GROUP BY M.STUDIO_ID, D.DIRECTOR_BIRTH_PLACE
   
    ) AS MaxCounts
   
    WHERE MaxCounts.STUDIO_ID = S.STUDIO_ID
)

GROUP BY S.STUDIO_NAME;




--37. Indica cuál fue la primera película que alquilaron los miembros del videoclub cuyos teléfonos tengan como último dígito el ID de alguna nacionalidad
RESULTADO

SELECT ME.MEMBER_NAME, M.MOVIE_NAME 

FROM MEMBERS ME

JOIN MEMBERS_MOVIE_RENTAL R ON ME.MEMBER_ID = R.MEMBER_ID

JOIN MOVIES M ON R.MOVIE_ID = M.MOVIE_ID

JOIN NATIONALITIES N ON RIGHT(ME.MEMBER_PHONE, 1) = N.NATIONALITY_ID

WHERE (R.MEMBER_ID, R.MEMBER_RENTAL_DATE) IN (
    
SELECT R2.MEMBER_ID, MIN(R2.MEMBER_RENTAL_DATE)
   
FROM MEMBERS_MOVIE_RENTAL R2
   
JOIN MEMBERS ME2 ON R2.MEMBER_ID = ME2.MEMBER_ID
   
JOIN NATIONALITIES N2 ON RIGHT(ME2.MEMBER_PHONE, 1) = N2.NATIONALITY_ID
    
WHERE N2.NATIONALITY_ID = N.NATIONALITY_ID
   
GROUP BY R2.MEMBER_ID

--FIN DE LOS EJERCICIOS
);

